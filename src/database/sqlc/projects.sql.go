// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: projects.sql

package database

import (
	"context"
)

const getProjectByCourseId = `-- name: GetProjectByCourseId :many
SELECT id, course_id 
FROM projects 
WHERE course_id = $1
`

func (q *Queries) GetProjectByCourseId(ctx context.Context, courseID int64) ([]Projects, error) {
	rows, err := q.db.QueryContext(ctx, getProjectByCourseId, courseID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Projects
	for rows.Next() {
		var i Projects
		if err := rows.Scan(&i.ID, &i.CourseID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
